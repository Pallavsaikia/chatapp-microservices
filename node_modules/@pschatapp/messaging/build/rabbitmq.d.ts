import { ExchangeName } from "./exchange-name";
import { RabbitMqClient } from "./base";
import { RabbitMqExchangeType } from "./rabbitmq-exchangetype";
export interface RabbitMQAttr {
    get client(): RabbitMqClient;
    get clientExist(): boolean;
    connect(url: string, exchangeName: ExchangeName): Promise<Error | null>;
    disconnect(): void;
}
declare class RabbitMQ extends RabbitMqClient {
    private _client?;
    url: string;
    exchangeName: ExchangeName;
    exchangeType: RabbitMqExchangeType;
    get client(): RabbitMqClient;
    get clientExist(): boolean;
    connectConfirm(url: string, exchangeName: ExchangeName): Promise<Error | null>;
    deleteExchangeConfirm(): Promise<void>;
    disconnectConfirm(): Promise<void>;
}
export declare const rabbitMQ: RabbitMQ;
export {};
