import { RabbitMqClient } from "./client-rabbitmq";
import { RoutingKey } from "../routing";
import { Event } from "./base-event";
import { Replies } from "amqplib";
export declare abstract class Publisher<T extends Event> {
    private client;
    abstract routingKey: RoutingKey;
    abstract mandatory: boolean | null;
    abstract persistent: boolean | null;
    abstract expiration: number | null;
    abstract onFail(err: any, ok: Replies.Empty | null): void;
    abstract onSuccess(err: any, ok: Replies.Empty): void;
    constructor(client: RabbitMqClient);
    publish(msg: T['data']): Promise<boolean>;
}
