import { ConsumeMessage } from "amqplib";
import { RabbitMqClient } from "./client-rabbitmq";
import { RoutingKey } from "../routing";
import { Event } from "./base-event";
export declare abstract class Listener<T extends Event> {
    private client;
    abstract routingKey: RoutingKey;
    abstract onMessage(msg: T['data'], msgbfr: ConsumeMessage): void;
    abstract exclusive: boolean | null;
    abstract durable: boolean | null;
    abstract autoDelete: boolean | null;
    abstract expires: number | null;
    abstract queueName: string | null;
    constructor(client: RabbitMqClient);
    subscribe(): Promise<false | undefined>;
    parsedData(msg: ConsumeMessage): any;
}
